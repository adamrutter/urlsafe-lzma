/**
 * Compress a string with the LZMA algorithm
 *
 * @param {string}            value                 The string to be compressed
 * @param {object}            options
 * @param {1|2|3|4|5|6|7|8|9} options.mode          Which mode to use (1 through 9, defaults to 7)
 * @param {boolean}           options.enableEndMark Whether to write an end mark
 * @returns {string}
 */
export declare function compress(
  string: string,
  options?: {
    mode?: number;
    enableEndMark?: boolean;
  }
): string;

/**
 * Compress a string with the LZMA algorithm to URL-safe characters
 *
 * @param {string}            value                 The string to be compressed
 * @param {object}            options
 * @param {1|2|3|4|5|6|7|8|9} options.mode          Which mode to use (1 through 9, defaults to 7)
 * @param {boolean}           options.enableEndMark Whether to write an end mark
 * @returns {string}
 */
export declare function compressUrlSafe(
  string: string,
  options?: {
    mode?: number;
    enableEndMark?: boolean;
  }
): string;

/**
 * Decompress a string compressed with the LZMA algorithm
 *
 * @param {number[]|Int8Array} bytes The int8 array created by the compress() function
 * @returns {string}
 */
export declare function decompress(bytes: number[] | Int8Array): string;

/**
 * Decompress a string compressed with the URL-safe compress function
 *
 * @param {string} string The URL-safe string generated by the compressUrlSafe() function
 * @returns {string}
 */
export declare function decompressUrlSafe(string: string): string;
